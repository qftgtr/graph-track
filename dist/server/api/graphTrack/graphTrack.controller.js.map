{"version":3,"sources":["api/graphTrack/graphTrack.controller.js"],"names":[],"mappings":"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","file":"api/graphTrack/graphTrack.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * POST    /api/go                 ->  go\n * POST    /api/exit               ->  exit\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport GraphTrack from './graphTrack.model';\nconst {GT_States, GT_Edges} = GraphTrack;\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\nexport function go(req, res) {\n  let {states, appVersion} = req.query;\n  if (!appVersion)\n    return res.status(404).json({ok: 0, msg: 'app version required'}).end();\n  \n  if (!states)\n    return res.status(404).json({ok: 0, msg: 'state required'}).end();\n  \n  states = states.split(',');\n  appVersion = parseAppVersion(appVersion);\n  \n  var promises = [];\n  \n  for (let i=0; i<states.length-1; i++) {\n    if (states[i]) {\n      promises.push(incEdge(appVersion, states[i], states[i+1]));\n      promises.push(incState(appVersion, states[i+1]));\n    } else {\n      promises.push(incState(appVersion, 'launch'));\n      promises.push(launchState(appVersion, states[i+1]));\n    }\n  }\n  \n  Promise.all(promises)\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\nexport function graph(req, res) {\n  const {appVersion} = req.query;\n  \n  if (!appVersion)\n    return res.status(404).json({ok: 0, msg: 'app version required'}).end();\n  \n  const version = parseAppVersion(appVersion);\n  \n  Promise.all([\n    GT_States.find({version: version}, {\n      _id: false,\n      state: true,\n      count: true,\n      launch: true,\n      exit: true,\n    }).exec(),\n    GT_Edges.find({version: version}, {\n      _id: false,\n      state_from: true,\n      state_to: true,\n      count: true,\n    }).exec(),\n  ]).then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n\nfunction launchState(version, state, type) {\n  const _id = [version, state].join('_');\n  \n  return GT_States.update({_id}, {$inc: {count: 1, launch: 1}}).exec()\n    .then(result => {\n      if (result.nModified)\n        return result;\n    \n      return GT_States.create({\n        _id,\n        version,\n        state,\n        count: 1,\n        launch: 1,\n        exit: 0,\n      });\n    });\n}\n  \nfunction incState(version, state) {\n  const _id = [version, state].join('_');\n  \n  return GT_States.update({_id}, {$inc: {count: 1}}).exec()\n    .then(result => {\n      if (result.nModified)\n        return result;\n    \n      return GT_States.create({\n        _id,\n        version,\n        state,\n        count: 1,\n        launch: 0,\n        exit: 0,\n      });\n    });\n}\n\nfunction incEdge(version, stateFrom, stateTo) {\n  const _id = [version, stateFrom, stateTo].join('_');\n  \n  return GT_Edges.update({_id}, {$inc: {count: 1}}).exec()\n    .then(result => {\n      if (result.nModified)\n        return result;\n\n      return GT_Edges.create({\n        _id,\n        version,\n        state_from: stateFrom,\n        state_to: stateTo,\n        count: 1,\n      });\n    });\n}\n\n//function endTrack(stateCache) {\n//  console.log(stateCache.state + ' -> exit');\n//  \n//  return Promise.all([\n//    exitState(stateCache.version, stateCache.state),\n//    incState(stateCache.version, 'exit'),\n//  ]).then(() => {\n//    stateCache = {};\n//    return;\n//  });\n//}\n//\n//function exitState(version, state) {\n//  const _id = [version, state].join('_');\n//  return GT_States.update({_id}, {$inc: {exit: 1}}).exec();\n//}\n\nfunction parseAppVersion(v) {\n  const version = v.split('.'),\n    major = parseInt(version[0],10) || '0',\n    minor = parseInt(version[1],10) || '0',\n    fix = parseInt(version[2],10) || '0';\n  return [major, minor, fix].join('.');\n}"],"sourceRoot":"/source/"}