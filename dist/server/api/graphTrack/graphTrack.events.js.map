{"version":3,"sources":["api/graphTrack/graphTrack.events.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;;;sBAEc,QAAQ;;eACP,OAAO,CAAC,oBAAoB,CAAC;;IAApD,SAAS,YAAT,SAAS;IAAE,QAAQ,YAAR,QAAQ;;AACxB,IAAI,gBAAgB,GAAG,0BAAkB,CAAC;;;AAG1C,gBAAgB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;qBAqBrB,gBAAgB","file":"api/graphTrack/graphTrack.events.js","sourcesContent":["/**\n * GraphTrack model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nvar {GT_States, GT_Edges} = require('./graphTrack.model');\nvar GraphTrackEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nGraphTrackEvents.setMaxListeners(0);\n/*\n// Model events\nvar events = {\n  'save': 'save',\n  'remove': 'remove'\n};\n\n// Register the event emitter to the model events\nfor (var e in events) {\n  var event = events[e];\n  GraphTrack.schema.post(e, emitEvent(event));\n}\n\nfunction emitEvent(event) {\n  return function(doc) {\n    GraphTrackEvents.emit(event + ':' + doc._id, doc);\n    GraphTrackEvents.emit(event, doc);\n  }\n}\n*/\nexport default GraphTrackEvents;\n"],"sourceRoot":"/source/"}