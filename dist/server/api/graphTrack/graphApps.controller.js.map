{"version":3,"sources":["api/graphTrack/graphApps.controller.js"],"names":[],"mappings":";;;;;;AAMA,YAAY,CAAC;;;;;;;;;;;sBAEC,QAAQ;;;;+BACC,oBAAoB;;;;IACpC,OAAO,gCAAP,OAAO;;AAEd,SAAS,iBAAiB,CAAC,GAAG,EAAE,UAAU,EAAE;AAC1C,YAAU,GAAG,UAAU,IAAI,GAAG,CAAC;AAC/B,SAAO,UAAS,MAAM,EAAE;AACtB,QAAI,MAAM,EAAE;AACV,SAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACrC;GACF,CAAC;CACH;;AAED,SAAS,WAAW,CAAC,GAAG,EAAE,UAAU,EAAE;AACpC,YAAU,GAAG,UAAU,IAAI,GAAG,CAAC;AAC/B,SAAO,UAAS,GAAG,EAAE;AACnB,OAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GAClC,CAAC;CACH;;AAED,SAAS,YAAY,CAAC,GAAG,EAAE;AACzB,SAAO,UAAS,MAAM,EAAE;AACtB,QAAI,MAAM,EAAE;AACV,aAAO,MAAM,CAAC,MAAM,EAAE,CACnB,IAAI,CAAC,YAAM;AACV,WAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;OACvB,CAAC,CAAC;KACN;GACF,CAAC;CACH;;AAED,SAAS,oBAAoB,CAAC,GAAG,EAAE;AACjC,SAAO,UAAS,MAAM,EAAE;AACtB,QAAI,CAAC,MAAM,EAAE;AACX,SAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AACtB,aAAO,IAAI,CAAC;KACb;AACD,WAAO,MAAM,CAAC;GACf,CAAC;CACH;;;;AAIM,SAAS,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE;AAClC,MAAM,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;;AAE9B,SAAO,OAAO,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,IAAI,CAAC,GAAG,EAAC,CAAC,CAAC,IAAI,EAAE,CAC3C,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,SACvB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;CAC5B;;;;;;;;;;;;AAWM,SAAS,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE;AAClC,MAAM,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;;AAE9B,SAAO,OAAO,CAAC,MAAM,CAAC;AACpB,UAAM,EAAE,IAAI,CAAC,GAAG;AAChB,QAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI;GAEpB,CAAC;AACC,MAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,SAC5B,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;CAC5B;;;;AAGM,SAAS,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE;AAChC,MAAM,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;;AAE9B,SAAO,OAAO,CAAC,QAAQ,CAAC;AACtB,OAAG,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE;AAClB,UAAM,EAAE,IAAI,CAAC,GAAG;GACjB,CAAC,CAAC,IAAI,EAAE,CACN,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAC/B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,SAClB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;CAC5B","file":"api/graphTrack/graphApps.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * POST    /api/go                 ->  go\n * POST    /api/exit               ->  exit\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport GraphTrack from './graphTrack.model';\nconst {GT_Apps} = GraphTrack;\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\n\n// Gets a list of apps\nexport function indexApps(req, res) {\n  const user = req.session.user;\n  \n  return GT_Apps.find({userId: user._id}).exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single app from the DB\n//export function show(req, res) {\n//  return GT_Apps.findById(req.params.id).exec()\n//    .then(handleEntityNotFound(res))\n//    .then(respondWithResult(res))\n//    .catch(handleError(res));\n//}\n\n// Creates an app in the DB\nexport function createApp(req, res) {\n  const user = req.session.user;\n  \n  return GT_Apps.create({\n    userId: user._id,\n    name: req.body.name,\n//    version: [],\n  })\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Deletes a Thing from the DB\nexport function destroy(req, res) {\n  const user = req.session.user;\n  \n  return GT_Apps.findById({\n    _id: req.params.id,\n    userId: user._id,\n  }).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"],"sourceRoot":"/source/"}